user www-data;
worker_processes  auto;
events {
    worker_connections  2048;
}
include /etc/nginx/modules-enabled/*.conf;
# RTMP configuration
rtmp {
    server {
        listen 1935; # Listen on standard RTMP port
        chunk_size 8192;

        application live {
            live on;
            # Turn on HLS
            hls on;
            hls_path /mnt/hls/;
            hls_fragment 6s;
            hls_playlist_length 90;
            # disable consuming the stream from nginx as rtmp
            allow play all;
            allow publish all;

        }
    }
}

http {
#    sendfile off;
#    tcp_nopush on;
 #   aio on;
        fastcgi_read_timeout 6000;
        client_header_timeout 6000;
        client_body_timeout 6000;
        directio 512;
        default_type application/octet-stream;
        client_max_body_size 10000M;
        sendfile on;

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
        ssl_prefer_server_ciphers on;

        server {
                 listen [::]:443 ssl ipv6only=on; # managed by Certbot
                 listen 443 ssl; # managed by Certbot
                 ssl_certificate /etc/letsencrypt/live/stream.binbo.ir/fullchain.pem; # managed by Certbot
                 ssl_certificate_key /etc/letsencrypt/live/stream.binbo.ir/privkey.pem; # managed by Certbot
                 include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
                 ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

        }


        server {
                listen 80;

                location / {
                       # Disable cache
                       add_header 'Cache-Control' 'no-cache';

            # CORS setup
                    add_header 'Access-Control-Allow-Origin' '*' always;
                    add_header 'Access-Control-Expose-Headers' 'Content-Length';

            # allow CORS preflight requests
                    if ($request_method = 'OPTIONS') {
                        add_header 'Access-Control-Allow-Origin' '*';
                        add_header 'Access-Control-Max-Age' 1728000;
                        add_header 'Content-Type' 'text/plain charset=UTF-8';
                        add_header 'Content-Length' 0;
                        return 204;
                    }

                    types {
                        application/dash+xml mpd;
                        application/vnd.apple.mpegurl m3u8;
                        video/mp2t ts;
                    }
                    root /storage/output;
                }
            }
            server
            {
                listen 8080;
                root /usr/local/nginx/html;
                index index.php index.html index.htm index.nginx-debian.html;
                server_name example.com;
                include /usr/local/nginx/conf/mime.types;
                client_max_body_size 10000M;
#              auth_basic           "Administratorâ€™s Area";
#              auth_basic_user_file /usr/local/nginx/.htpasswd;
               location / {
                        try_files $uri $uri/ =404;

                }


                location ~ \.php$ {

                         include fastcgi.conf;
                         fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
                                                #Execution Time
#                        fastcgi_read_timeout 600;
                }
                location ~ /\.ht {
                         deny all;
                }

        }
        server {
            if ($host = xxx.yyy.ir) {
                return 301 https://$host$request_uri;
            } # managed by Certbot


#               listen 80 ;
#               listen [::]:80 ;
            server_name xxx.yyy.ir;
            return 404; # managed by Certbot


        }
}
